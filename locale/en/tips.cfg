[pywiki-sections]
title=Pyanodon codex
statistics=[item=iron-gear-wheel] Homepage
fluid-index=[fluid=coal-gas] Fluid index
item-index=[item=coke] Solid fuel values
coalprocessing=Coal Processing
ash=[item=ash] Ash
mechanical-inserter=[item=burner-inserter] Mechanical inserter
assembling-machine=[item=assembling-machine-1] Burner assembling machines
tailings-pond=[item=tailings-pond] Tailings pond
combustion-mixture=[fluid=combustion-mixture1] Combustion mixture

petroleumhandling=Petroleum handling
bitumen-seep=[item=tar-seep-mk01] Bitumen seeps
tholin=[fluid=proto-tholins] Tholins

alienlife=Alien life
farming=[item=native-flora] Farming
caravans=[item=caravan] Caravans
digosaurus=[item=digosaurus] Dig-o-saurus
mega-farm=[item=replicator-bioreserve] Automated smart farms
pydrive=[item=pydrive] Logistic stations
ocula=[item=ocula] Ocula
vatbrain=[item=vat-brain] Vat-brain
turd=[item=py-science-pack-1] Technological upgrade and research device

alternativeenergy=Alternative energy
blimp=[item=aerial-blimp-mk01] Aerial turbines
lfr-stirling=[item=solar-concentrator] Thermosolar 1 and 2
microwave-receiver=[item=microwave-satellite] Microwave receiver

[pywiki-descriptions]
ash=Most inorganic fuels such as [item=coal] now produce [item=ash] when burnt, much like how [item=uranium-fuel-cell] produces [item=used-up-uranium-fuel-cell] on consumption.\n\nAsh management is a central part of the early game. [entity=solid-separator] can help to repurpose some of the ash into ores.
mechanical-inserter=The burner inserter is now an [item=burner-inserter]. Unlike in the base game, it does not need to be fueled. It's speed is around 0.6 items per second. It now also functions as a filter inserter, so you can whitelist or blacklist one item.\n\n[item=inserter] also gets a filter slot, has a speed of 1.2 items per second, but still needs electricity.\n[item=long-handed-inserter] moves 1.2 items per second, and is unchanged otherwise.\n[item=fast-inserter] and [item=filter-inserter] move 2.4 items per second, and are unchanged otherwise.
assembling-machine=The assembly machine (now [entity=assembling-machine-1]) now requires fuel. It also has an ingredient limit now: only recipes with at most 3 ingredients can be used by this building. [entity=assembling-machine-2] has a limit of 4, and [entity=assembling-machine-3] of 5 ingredients, while [entity=automated-factory-mk01] has no ingredient limit.
tailings-pond=The [entity=tailings-pond] has different mechanisms depending on whether you put a gas or a liquid into it.\n\nGasses, such as [fluid=coal-gas], are vented into the atmosphere, which destroys the gas.\n\nLiquids, such as [fluid=tar], are stored, until the tailings pond is full, at which point the pond overflows. This destroys the contents, and puts a ring of highly flammable pollution tiles around the tailings pond. You can remove fluids from the pond again (if it hasn't overflowed) by connecting a pump directly to one of the outputs.
combustion-mixture=You can burn [fluid=combustion-mixture1] in [entity=gasturbinemk01] for electricity. Higher temperatures of the fluid mean that the turbine works at a higher efficiency, thus generating more power. [entity=gasturbinemk01] has a limit to the temperature it can accept: if you give it a higher temperature input than this limit, it will be capped to that temperature, so you will be wasting the input. Higher level turbines have higher limits.

bitumen-seep=[entity=bitumen-seep] can spawn on the map. These mark underground hydrocarbon deposits. You can build one of [entity=bitumen-seep-mk01], [entity=tar-seep-mk01] or [entity=natural-gas-seep-mk01] over these.\n\nYou first have to feed these buildings with a drilling fluid, like [fluid=drilling-fluid-0]. The building does not produce anything at this point, since you're drilling for resources. Eventually, you will reach the underground deposit, and the building will stop needing drilling fluids, but instead yield [fluid=crude-oil], [fluid=tar] or [fluid=raw-gas], respectively, depending on the type of building you built.\n\nThe amount of resource spawned depends on:\n - The level of drilling fluid D (between 1 and 4).\n - The level of the building B (between 1 and 4).\n - A random number R between 1 and 4.\n\nThe number of drill cycles is then 640000 * D * B * R.\n\nEvery drilling cycle results in 100 of the desired fluid. The speed of the building determines the number of drilling cycles per second.
tholin=Nauvis' atmosphere is rich in tholins, which can be used to craft a variety of gases. In order to create [fluid=tholins], you need to launch a [item=capsule] with a rocket using a [entity=rocket-silo]. It will gather up the tholins present in the atmosphere for you to use.\n\nTholins can be processed into several useful gasses:\n[fluid=carbon-dioxide] [fluid=nitrogen] [fluid=hydrogen]\n[fluid=chlorine] [fluid=acetylene] [fluid=acidgas] [fluid=ammonia] [fluid=carbon-dioxide] [fluid=benzene]\n[fluid=cyanic-acid] [fluid=carbon-dioxide] [fluid=ethylene] [fluid=methane] [fluid=syngas] [fluid=acetone]\n[fluid=methanal] [fluid=methanol] [fluid=propene] [fluid=refsyngas]\n[fluid=deuterium] [fluid=glycerol] [fluid=helium3] [fluid=olefin]

farming=If you want to grow plants or breed animals, such as [item=moss] or [item=vrauks], you need to have some to start with to bootstrap the process. Farms and creature dwellings like [entity=moss-farm-mk01] and [entity=vrauks-paddock-mk01] therefore require those plants or creatures to be inserted as modules into the entity for them to function - no modules, and the building is disabled. Some of these plants you can find in the wild, some need to be GMO'd into existence before you can grow and breed them. These "modules" can be upgraded with later technologies to increase the speed of the buildings, for example [item=moss-mk02].
caravans=[item=caravan] is a living, organic logistics creature with 30 inventory slots and a programmable schedule, similar to a locomotive. It utilizes the biter pathfinding AI.\nYou can program the caravan to visit any entity. When it reaches its destination, you can program specific actions based on that destination. Caravans cannot be killed by trains or biters. There is also an [item=flyavan].\n\nActions available for different destinations include: \n- Wait: The caravan will stay at the destination. *Does not use food\n- Store Food: The caravan will fill its fuel slots from the destination's inventory. *Does not use food\n- Fill Cargo: The caravan will extract items until its inventory is full.\n- Empty Cargo: The caravan will empty its inventory.\n- Filtered pickup: The caravan will pick up or drop off items until it has the specified amount.\n- Circuit condition: The caravan will wait at the destination until the circuit condition is met. *Does not use food\n\nActions available for different types of destinations include:\n- Player: [Wait, Store Food, Fill Cargo, Empty Cargo, Filtered pickup]\n- Outpost: [Wait, Store Food, Fill Cargo, Empty Cargo, Filtered pickup, Circuit condition]\n- Another Caravan: [Wait, Store Food, Fill Cargo, Empty Cargo, Filtered pickup]\n- Cargo Wagon: [Wait, Fill Cargo, Empty Cargo, Filtered pickup]\n- Electric pole: [Wait, Circuit condition]\n- Default: [Wait]\n\nThe caravan requires food to function. Each action or destination requires the caravan to consume food, with different types of food providing a different number of actions:\n- [item=brain] → 2 actions\n- [item=auog-food-01] → 4 actions\n- [item=workers-food] → 10 actions\n- [item=workers-food-02] → 30 actions\n\nUse middle-click in an [entity=outpost] to set the filter. Don't forget to leave a slot for food!
digosaurus=[item=digosaurus] is one of the native species to this planet. Over years of evolution, they have adapted to collect and use [item=nexelit-ore] as an energy source. Exploit it.\nDig-o-saurus must be placed in the [entity=dino-dig-site]. The dig site has a range which it can mine the nexelit. It also requires electricity.\n\nDig-o-saurus requires food to work. Each food allows the Dig-o-saurs to mine a different number of ores per trip.\n[item=guts] → 1 ore\n[item=meat] → 2 ores\n[item=workers-food] → 8 ores\n[item=workers-food-02] → 16 ores\n\n[item=thikat] is a larger, genetically enhanced version of the Dig-o-saurus. Thikat has 100% mining productivity.\n[item=work-o-dile] has 300% mining productivity.
mega-farm=The [entity=mega-farm] has the ability to cultivate patches of plants. You can pick a type of plant and a recipe for that plant, for example [recipe=bioreserve-super-1], then you have to feed the required materials. You then have to insert the collector, for example [item=replicator-bioreserve]. After inserting the collector, you have to 'launch' the 'rocket' - overhyped terms thought up by marketing, no doubt - which generates the patch of your chosen plants to the north of your building. This patch can then be harvested using the [entity=harvester].\n\nWhen the patch dries up, you can repeat the process, for a renewable source of plants such as [item=native-flora]. More complex recipes generate richer patches.
pydrive=You've created a species of giant, super fast, yet docile worms. They are able to transfer items instantaneously between different [entity=pydrive] buildings, as long as those buildings are tuned to the identification of the same worm.\n\nUse the rings of checkboxes to select a specific worm - every pattern of checked and unchecked boxes will select a different worm. Your items will still be with the worm if no logistic station is tuned to that worm, you can retrieve them by tuning to that worm again.
ocula=You’ve developed a weird, creepy, overpriced eyeball creature. [item=ocula] is a personal logistics device that will deliver items even if you are outside the range of a roboport.\n\nThe ocula has no range limit, and delivers items based on your personal logistic filters. Very helpful if you don’t have a global logistic network.\n\nThe ocula requires an [item=ipod] for storage. Each eyepod has room for 3 oculus. The eyepod must be placed in range of a roboport network, such as from [item=py-roboport-mk01]. The oculus will only pick up items from that network.\n\n[item=ocula] does not support logistic trash slots.
vatbrain=Sometimes science pushes too far. [entity=vat-brain] grants a large productivity bonus to nearby [entity=lab] at a high cost.\n\n[entity=vat-brain] works similarly to the [entity=beacon], however it must be fed constantly with cartridges such as [item=brain-cartridge-01]. A single cartridge will last for 20 seconds.\nThe effect of multiple vatbrains can stack together, granting a greater productivity bonus. Whenever the cartridge expires, you will lose the productivity bonus.\n\nEach cartridge grants a different amount of productivity to nearby labs:\n- [item=brain-cartridge-01] →25%\n- [item=brain-cartridge-02] →50%\n- [item=brain-cartridge-03] →75%\n- [item=brain-cartridge-04] →100%\n\n[entity=vat-brain] can also craft certain recipes such as [recipe=metastable-quasicrystal], [recipe=antiviral], and [recipe=gh]. These recipes do not require cartridges.

blimp=Place down at least two [entity=aerial-base] far away from each other, and then make an [entity=aerial-blimp-mk01]. You can give the aerial turbine a path between the discharging bases just like you would with trains - select 'store energy' in the menu.\n\nIt will then follow this path. While flying, it will gather wind energy from the air, and when it reaches a base, it will discharge this energy. The bases have a large energy buffer to average out the energy gain over time. You can click on the aerial turbines to see their accumulated energy.
lfr-stirling=[entity=lrf-panel-mk01] and [entity=stirling-concentrator] both use sunlight to warm up [fluid=molten-salt] during the day. The higher-temperature molten salt can then be used to generate electricity via [entity=lrf-building-mk01] and [entity=solar-concentrator]. Adding more panels or concentrators will increase the speed at which the salt is warmed, and therefore the speed at which the power plant will be able to operate. The [entity=lrf-panel-mk01] adds 600kW of heat to the molten salt stored inside of it, and the [entity=stirling-concentrator] does the same at 800kW of heat. Note that it can take a while for the salt to warm up initially.\n\nThe tempature of the molten salt does not automatically equalize between entities. Instead you must continuously pump the cold salt into the hot salt. The other panels contribute to the heating of the salt that goes into the power plant, even though it may take a while for the system to reach a steady state.
microwave-receiver=[entity=microwave-receiver] allows the transfer of solar energy from [item=microwave-satellite] in orbit.\n\nEach [item=microwave-satellite] can beam down up to 4.8MW of energy. In order to get the satellite into orbit, launch it into space with a [entity=rocket-silo]. The [entity=rocket-silo] has room for up to 4 satellites per launch.\n\n[entity=microwave-receiver] can support up to 20 satellites for a total of 96MW.

[pywiki-statistics]
info=Welcome to the Pyanodon Codex. This book contains helpful information to your success in pY mods.
info-2=Certian pages are interactive and can influence the efficiency of your factory.
info-3=[font=default-semibold][color=255,230,192]Join the offical pY Discord: [/color][/font]
info-4=[font=default-semibold][color=255,230,192]Support Pyanodon: [/color][/font]
playtime=[font=default-semibold][color=255,230,192]Playtime: [/color][/font]__1__:__2__:__3__
time-of-day=[font=default-semibold][color=255,230,192]Time of day: [/color][/font]__1__:__2__ __3__
mods-installed=[font=default-semibold][color=255,230,192]Mods installed: [/color][/font]__1__
buildings-placed=[font=default-semibold][color=255,230,192]Buildings placed: [/color][/font]__1__
recipes-unlocked=[font=default-semibold][color=255,230,192]Recipes unlocked: [/color][/font]__1__
science-produced=[font=default-semibold][color=255,230,192]Science produced: [/color][/font]__1__
creatures-slaughtered=[font=default-semibold][color=255,230,192]Creatures slaughtered: [/color][/font]__1__
items-produced=[font=default-semibold][color=255,230,192]Items produced: [/color][/font]__1__
items-consumed=[font=default-semibold][color=255,230,192]Items consumed: [/color][/font]__1__
fluids-produced=[font=default-semibold][color=255,230,192]Fluids produced: [/color][/font]__1__
fluids-consumed=[font=default-semibold][color=255,230,192]Fluids consumed: [/color][/font]__1__
evolution=[font=default-semibold][color=255,230,192]Evolution factor: [/color][/font]__1__%\n[font=default-semibold][color=255,230,192]By pollution: [/color][/font]+__2__\n[font=default-semibold][color=255,230,192]By spawner kills: [/color][/font]+__3__\n[font=default-semibold][color=255,230,192]By time: [/color][/font]+__4__
pollution=[font=default-semibold][color=255,230,192]Pollution produced: [/color][/font]__1__
rockets-launched=[font=default-semibold][color=255,230,192]Rockets launched: [/color][/font]__1__
trains=[font=default-semibold][color=255,230,192]Trains: [/color][/font]__1__
caravans=[font=default-semibold][color=255,230,192]Caravans: [/color][/font]__1__
tech-tree-completion=[font=default-semibold][color=255,230,192]Tech tree completion: [/color][/font]__1__%

[pywiki-spreadsheets]
localised-name=Name
voidable=Voidable in
fuel-category=Fuel category
fuel-value=Fuel value
unlocked-at=Unlocked at
burnt-result=Burnt result
color=Color