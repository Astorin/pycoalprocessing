[pywiki-sections]
title=Кодекс Pyanodon
statistics=[item=iron-gear-wheel] Домашняя страница
fluid-index=[fluid=coal-gas] Список жидкостей
item-index=[item=coke] Значения твёрдого топлива
coalprocessing=Переработка угля
ash=[item=ash] Пепел
mechanical-inserter=[item=burner-inserter] Механический манипулятор
assembling-machine=[item=assembling-machine-1] Твердотопливные сборочные автоматы
tailings-pond=[item=tailings-pond] Хранилище отходов
combustion-mixture=[fluid=combustion-mixture1] Горючая смесь
petroleumhandling=Переработка нефти
bitumen-seep=[item=tar-seep-mk01] Просачивание битума
tholin=[fluid=proto-tholins] Толины
alienlife=Чужая жизнь
farming=[item=native-flora] Фермерство
caravans=[item=caravan] Караваны
digosaurus=[item=digosaurus] Диг-о-завр
mega-farm=[item=replicator-bioreserve] Автоматизированные умные фермы
pydrive=[item=pydrive] Логистические станции
ocula=[item=ocula] Окула
vatbrain=[item=vat-brain] Мозги-в-банке
turd=[item=py-science-pack-1] Технологическая модернизация и исследования
alternativeenergy=Альтернативная энергия
blimp=[item=aerial-blimp-mk01] Воздушные турбины
lfr-stirling=[item=solar-concentrator] Термосолнечная энергия

[pywiki-descriptions]
ash=Большинство неорганических видов топлива, таких как [item=coal], теперь производят [item=ash] при сгорании, подобно тому, как [item=uranium-fuel-cell] производит [item=used-up-uranium-fuel-cell] при потреблении.\n\nУправление пеплом — центральная часть ранней игры. [entity=solid-separator] может помочь переработать часть пепла в руду.
mechanical-inserter=Твердотопливный манипулятор теперь называется [item=burner-inserter]. В отличие от основной игры, его не нужно заправлять топливом. Его скорость составляет около 0,6 единиц в секунду. Также у него есть фильтр, поэтому вы можете внести один элемент в белый или чёрный список.\n\n[item=inserter] также получает ячейку для фильтра, имеет скорость 1,2 элемента в секунду, но всё ещё нуждается в электричестве.\n[item=long-handed-inserter] перемещает 1,2 элемента в секунду, больше никаких изменений.\n[item=fast-inserter] и [item=filter-inserter] перемещают 2,4 элемента в секунду и не изменены в остальном.
assembling-machine=Сборочный автомат (теперь [entity=assembling-machine-1]) теперь требует топлива. Также в нём теперь есть ограничение на количество ингредиентов: в этом здании можно использовать только рецепты, содержащие не более 3 ингредиентов. [entity=assembling-machine-2] имеет ограничение в 4, а [entity=assembling-machine-3] - 5 ингредиентов, в то время как [entity=automated-factory-mk01] не имеет ограничения на количество ингредиентов.
tailings-pond=[entity=tailing-pond] имеет разные механизмы в зависимости от того, поместите ли вы в него газ или жидкость.\n\nГазы, такие как [fluid=coal-gas], выбрасываются в атмосферу, которая разрушает газ. \n\nЖидкости, такие как [fluid=tar], хранятся до тех пор, пока хранилище не заполнится, после чего пруд переполняется. Это разрушает содержимое и образует кольцо из легковоспламеняющихся клеток загрязнения вокруг хранилища отходов. Вы можете удалить жидкость из пруда (если он не переполнился), подключив насос напрямую к одному из выходов.
combustion-mixture=Вы можете сжечь [fluid=combustion-mixture1] в [entity=gasturbinemk01] для получения электричества. Более высокие температуры жидкости означают, что турбина работает с более высоким КПД и, таким образом, вырабатывает больше энергии. [entity=gasturbinemk01] имеет ограничение на температуру, которую она может принять: если вы дадите ей более высокую температуру, чем этот предел, он будет ограничен этой температурой, поэтому вы будете впустую тратить ввод. Турбины более высокого уровня имеют более высокие ограничения.
bitumen-seep=[entity=bitumen-seep] может появиться на карте. Они отмечают подземные залежи углеводородов. Вы можете построить [entity=bitumen-seep-mk01], [entity=tar-seep-mk01] или [entity=natural-gas-seep-mk01] над ними.\n\nСначала вам нужно наполнить эти здания буровым раствором, например [fluid=drilling-fluid-0]. На данный момент здание ничего не производит, так как вы добываете ресурсы. В конце концов, вы доберетесь до подземного месторождения, и зданию перестанут требоваться буровые растворы, а вместо этого потребуется [fluid=crude-oil], [fluid=tar] или [fluid=raw-gas] соответственно, в зависимости от типа построенного вами здания.\n\nКоличество создаваемых ресурсов зависит от:\n - Уровня бурового раствора D (от 1 до 4).\n - Уровня здания B (от 1 до 4).\n - Случайного числа R (от 1 до 4).\n\nКоличество циклов бурения равно 640000 * D * B * R.\n\nКаждый цикл бурения приводит к получению 100 требуемой жидкости. Скорость здания определяет количество циклов бурения в секунду.
tholin=Атмосфера Наувиса богата толинами, которые можно использовать для изготовления различных газов. Чтобы создать [fluid=tholins], вам нужно запустить [item=capsule] с помощью ракеты, используя [entity=rocket-silo]. Она соберёт присутствующие в атмосфере толины, которые вы сможете использовать.\n\nТолины можно перерабатывать в несколько полезных газов:\n[fluid=carbon-dioxide] [fluid=nitrogen] [fluid=hydrogen]\n[fluid=chlorine] [fluid=acetylene] [fluid=acidgas] [fluid=ammonia] [fluid=carbon-dioxide] [fluid=benzene]\n[fluid=cyanic-acid] [fluid=carbon-dioxide] [fluid=ethylene] [fluid=methane] [fluid=syngas] [fluid=acetone]\n[fluid=methanal] [fluid=methanol] [fluid=propene] [fluid=refsyngas]\n[fluid=deuterium] [fluid=glycerol] [fluid=helium3] [fluid=olefin]
farming=Если вы хотите выращивать растения или разводить животных, таких как [item=moss] или [item=vrauks], вам нужно иметь их для начала, чтобы запустить процесс. Таким образом, фермы и жилища существ, такие как [entity=moss-farm-mk01] и [entity=vrauks-paddock-mk01], требуют, чтобы эти растения или существа были вставлены в объект как модули для их функционирования — нет модулей, и здание не будет работать. Некоторые из этих растений вы можете найти в дикой природе, некоторые должны быть созданы с помощью генной инженерии, прежде чем вы сможете выращивать и разводить их. Эти «модули» можно модернизировать с помощью более поздних технологий для увеличения скорости построек, например [item=moss-mk02].
caravans=[item=caravan] — это живое органическое логистическое существо с 30 слотами инвентаря и программируемым расписанием, похожее на локомотив. Он использует алгоритм поиска пути, как у кусак.\nВы можете запрограммировать караван на посещение любого объекта. Когда он достигает места назначения, вы можете запрограммировать определенные действия на основе этого места назначения. Караваны не могут быть убиты поездами или кусаками. Существует также [item=flyavan].\n\nДействия, доступные для разных пунктов назначения, включают в себя: \n- Ожидание: караван останется в пункте назначения. *Не использует еду\n- Хранить еду: караван будет заполнять свои топливные слоты из инвентаря пункта назначения. *Не использует еду.\n- Заполнить груз: караван будет извлекать предметы, пока его инвентарь не будет заполнен.\n- Выгрузить груз: караван опустошит свой инвентарь.\n- Фильтрованный сбор: караван забирает или сбрасывает предметы, пока не наберется указанное количество.\n- Логическое условие: караван будет ждать в пункте назначения, пока не будет выполнено лоогическое условие. *Не использует еду\n\nДействия, доступные для различных типов пунктов назначения, включают:\n- Игрок: [Ожидание, Хранить еду, Заполнить груз, Выгрузить груз, Фильтрованный сбор]\n- Аванпост: [Ожидание, Хранить еду, Заполнить груз, Выгрузить груз, Фильтрованный сбор, Логическое условие]\n- Другой караван: [Ожидание, Хранить еду, Заполнить груз, Выгрузить груз, Фильтрованный сбор]\n- Грузовой вагон: [Ожидание, Заполнить груз, Выгрузить груз, Фильтрованный сбор]\n- Опора ЛЭП: [Ожидание, Логическое условие]\n- По умолчанию: [Ожидание]\n\nДля работы каравана требуется еда. Каждое действие или пункт назначения требуют, чтобы караван потреблял пищу, при этом разные типы пищи обеспечивают разное количество действий:\n- [item=brain] → 2 действия\n- [item=auog-food-01] → 4 действия\n- [item=workers-food] → 10 действий\n- [item=workers-food-02] → 30 действий\n\nИспользуйте среднюю кнопку мыши в [entity=outpost], чтобы установить фильтр. Не забудьте оставить место для еды!
digosaurus=[item=digosaurus] — один из местных видов этой планеты. За годы эволюции они приспособились собирать и использовать [item=nexelit-ore] в качестве источника энергии. Используйте это.\nДиг-о-завр должен быть помещен в [entity=dino-dig-site]. Место раскопок имеет диапазон, в котором оно может добывать некселит. Оно также требует электричества.\n\nДиг-о-завру для работы требуется еда. Каждая еда позволяет диг-о-заврам добывать различное количество руды за цикл.\n[item=guts] → 1 руда\n[item=meat] → 2 руды\n[item=workers-food] → 8 руды\n[item=workers-food-02] → 16 руды\n\n[item=thikat] — это более крупная, генетически улучшенная версия диг-о-завра. Тикат имеет 100% производительность добычи.\n[item=work-o-dile] имеет 300% производительность добычи.
mega-farm=[entity=mega-farm] может выращивать грядки растений. Вы можете выбрать тип растения и рецепт для этого растения, например [recipe=bioreserve-super-1], затем вам нужно будет скормить необходимые материалы. Затем вам нужно вставить сборщик, например [item=replicator-bioreserve]. Вставив сборщик, вы должны «запустить» «ракету» (без сомнения, слишком разрекламированные термины, придуманные маркетологами), которая создаёт участок выбранных вами растений к северу от вашего здания. Затем этот участок можно собрать с помощью [entity=harvester].\n\nКогда участок высохнет, вы можете повторить процесс для возобновляемого источника растений, такого как [item=native-flora]. Более сложные рецепты генерируют более богатые посадки.
pydrive=Вы создали вид гигантских, сверхбыстрых, но послушных червей. Они могут мгновенно перемещать предметы между различными [entity=pydrive] зданиями, если эти здания настроены на идентификацию одного и того же червя.\n\nИспользуйте кольца флажков, чтобы выбрать определенного червя - каждый узор флажков выбирает своего червя. Ваши предметы всё ещё будут с червём, если ни одна логистическая станция не настроена на этого червя, вы можете получить их, снова настроившись на этого червя.
ocula=Вы разработали странное, жуткое, переоцененное существо в виде глазного яблока. [item=ocula] – это персональное логистическое устройство, которое будет доставлять предметы, даже если вы находитесь за пределами зоны действия дронстанции.\n\nОкула не имеет ограничений по радиусу действия и доставляет предметы на основе ваших личных логистических фильтров. Очень полезно, если у вас нет глобальной логистической сети.\n\nОкуле требуется [item=ipod] для хранения. В каждом глаз-поде есть место для 3 окулов. Глаз-под должен находиться в зоне действия сети дронстанций, например [item=py-roboport-mk01]. Окула будет забирать предметы только из этой сети.\n\n[item=ocula] не поддерживает мусорные логистические слоты.
vatbrain=Иногда наука заходит слишком далеко. [entity=vat-brain] даёт большой бонус производительности ближайшим [entity=lab] по высокой цене.\n\n[entity=vat-brain] работает аналогично [entity=beacon], однако его нужно постоянно кормить ресурсами типа [item=brain-cartridge-01]. Одного картриджа хватает на 20 секунд.\nЭффект нескольких мозгов может складываться вместе, давая больший бонус к производительности. Всякий раз, когда срок действия картриджа истечёт, вы потеряете бонус к производительности.\n\nКаждый картридж повышает производительность ближайших лабораторий в разной степени:\n- [item=brain-cartridge-01] → 25%\n- [item=brain- картридж-02] → 50%\n- [item=brain-cartridge-03] → 75%\n- [item=brain-cartridge-04] → 100%\n\n[entity=vat-brain] также может создавать по некоторым рецептам, таким как [recipe=metastable-quasicrystal], [recipe=antiviral] и [recipe=gh]]. Эти рецепты не требуют картриджей.
blimp=Разместите не менее двух [entity=aerial-base] далеко друг от друга, а затем создайте [entity=aerial-blimp-mk01]. Вы можете указать воздушной турбине путь между разгрузочными базами, как и в случае с поездами — выберите в меню «хранить энергию».\n\nТогда она будет следовать по этому пути. Во время полета она будет собирать энергию ветра из воздуха, а когда достигнет базы, разряжает эту энергию. Базы имеют большой энергетический буфер для усреднения прироста энергии с течением времени. Вы можете нажать на воздушные турбины, чтобы увидеть их накопленную энергию.
lfr-stirling=[entity=lrf-panel-mk01] и [entity=stirling-concentrator] используют солнечный свет, чтобы нагреть [fluid=molten-salt] в течение дня. Затем расплавленную соль с более высокой температурой можно использовать для выработки электроэнергии с помощью [entity=lrf-building-mk01] и [entity=solar-concentrator]. Добавление дополнительных панелей или концентраторов увеличит скорость нагрева соли и, следовательно, скорость, с которой сможет работать электростанция. [entity=lrf-panel-mk01] добавляет 600 кВт тепла к расплавленной соли, хранящейся внутри неё, а [entity=stirling-concentrator] делает то же самое, выделяя 800 кВт тепла. Учтите, что первоначально соль может нагреваться не сразу.\n\nТемпература расплавленной соли не выравнивается автоматически между объектами. Вместо этого вы должны непрерывно закачивать холодную соль в горячую. Другие панели способствуют нагреву соли, поступающей на электростанцию, хотя для достижения устойчивого состояния системы может потребоваться некоторое время.

[pywiki-statistics]
info=Добро пожаловать в Кодекс Pyanodon. Эта книга содержит полезную информацию для вашего успеха в модах pY.
info-2=Некоторые страницы являются интерактивными и могут влиять на эффективность вашей фабрики.
info-3=[font=default-semibold][color=255,230,192]Присоединяйся к pY в Discord: [/color][/font]
info-4=[font=default-semibold][color=255,230,192]Поддержи Pyanodon: [/color][/font]
playtime=[font=default-semibold][color=255,230,192]Игровое время: [/color][/font]__1__:__2__:__3__
time-of-day=[font=default-semibold][color=255,230,192]Время дня: [/color][/font]__1__:__2__ __3__
mods-installed=[font=default-semibold][color=255,230,192]Установлено модов: [/color][/font]__1__
buildings-placed=[font=default-semibold][color=255,230,192]Зданий построено: [/color][/font]__1__
recipes-unlocked=[font=default-semibold][color=255,230,192]Рецептов разблокировано: [/color][/font]__1__
science-produced=[font=default-semibold][color=255,230,192]Науки произведено: [/color][/font]__1__
creatures-slaughtered=[font=default-semibold][color=255,230,192]Существ забито: [/color][/font]__1__
items-produced=[font=default-semibold][color=255,230,192]Предметов произведено: [/color][/font]__1__
items-consumed=[font=default-semibold][color=255,230,192]Предметов потреблено: [/color][/font]__1__
fluids-produced=[font=default-semibold][color=255,230,192]Жидкостей произведено: [/color][/font]__1__
fluids-consumed=[font=default-semibold][color=255,230,192]Жидкостей потреблено: [/color][/font]__1__
evolution=[font=default-semibold][color=255,230,192]Фактор эволюции: [/color][/font]__1__%\n[font=default-semibold][color=255,230,192]Из-за загрязнения: [/color][/font]+__2__\n[font=default-semibold][color=255,230,192]Из-за убийства гнёзд: [/color][/font]+__3__\n[font=default-semibold][color=255,230,192]Из-за времени: [/color][/font]+__4__
pollution=[font=default-semibold][color=255,230,192]Загрязнения произведено: [/color][/font]__1__
rockets-launched=[font=default-semibold][color=255,230,192]Ракет запущено: [/color][/font]__1__
trains=[font=default-semibold][color=255,230,192]Поездов: [/color][/font]__1__
caravans=[font=default-semibold][color=255,230,192]Караванов: [/color][/font]__1__
tech-tree-completion=[font=default-semibold][color=255,230,192]Дерево технологий завершено: [/color][/font]__1__%

[pywiki-spreadsheets]
localised-name=Название
voidable=Исчезает за
fuel-category=Категория топлива
fuel-value=Топливное значение
unlocked-at=Разблокируется в
burnt-result=Результат сгорания
color=Цвет
